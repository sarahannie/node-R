doctype html
head
  meta(charset='UTF-8')
  meta(http-equiv='X-UA-Compatible' content='IE=edge')
  meta(name='viewport' content='width=device-width, initial-scale=1.0')
  style 
    include ../../public/css/service.css
    include ../../public/css/bootstrap/css/bootstrap.css
    include ../../public/css/bootstrap/css/bootstrap.min.css
    include ../../public/css/bootstrap/css/bootstrap-grid.css
  script(src='https://kit.fontawesome.com/494d29de48.js' crossorigin='anonymous')
  link(rel='stylesheet' href='../css/service.css')
  link(rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css')
  //-  sweet alert plugin
  script(src='sweetalert2.min.js')
  link(rel='stylesheet' href='sweetalert2.min.css')
  
  
 
  title U-Farm
// Navbar start
div(w3-include-html='../includes/navbar.html')
// Navbar end
// Searchbar start
.container
  .row.height.d-flex.justify-content-center.align-items-center
    .col-md-8
      .search
        i.fa.fa-search
        form(method="post", action="/service")
          input.form-control(type='text' name="search" placeholder='Search For Products')
          button.btn.btn-primary Search
  
// Searchbar End
// Card start

.bg1
  .container
    .row
      each product in products
        .card.mx-auto.col-md-3.col-lg-4.col-10.mt-5
          img.mx-auto.img-thumbnail(src=product.image class="product-image")
          .card-body.text-center.mx-auto
            .cvp
              h5.card-title.font-weight-bold #{product.name}
              p.card-text UGX #{product.price}
              //- form(method='post' action='/service/'+product.id)
              .btn-flex
                input.btn.details.px-auto(type='button' value='Add to Cart' id="success" name='productId' data-id=product._id)
                //- a.btn.details.px-auto(type="submit") AddCart
                a.btn.det.px-4(type='button' data-toggle='modal' data-target='#exampleModalCenter' data-id=product._id) View





//notification
<button data-swal-template="#my-template">
  Trigger modal
</button>

// Modal
#exampleModalCenter.modal.fade(tabindex='-1' role='dialog' aria-labelledby='exampleModalCenterTitle' aria-hidden='true')
  .modal-dialog.modal-dialog-centered(role='document')
    .modal-content
      .modal-header
        h5#exampleModalLongTitle.modal-title Product Description
        button.close(type='button' data-dismiss='modal' aria-label='Close' )
          span(aria-hidden='true') &times;
      #productModalBody.modal-body

      .modal-footer
        button.btn.det.px-4(type='button' data-dismiss='modal') Close
        

// Card end
.space
// footer start
div(w3-include-html='../includes/footer.html')
// footer end
script(src='../js/includes.js')
script(src='https://cdn.jsdelivr.net/npm/sweetalert2@11')

script(src='../css/bootstrap/js/bootstrap.js')
script.
  function viewProduct(productId) {
    // Open the product view page in a new window as a pop-up
    window.open(`/service/${productId}`, 'product-view', 'height=400,width=600');
  }
  function openModal() {
        document.getElementById('productModal').style.display = 'block';
      }
script(src='https://code.jquery.com/jquery-3.6.0.min.js')
script(src='https://code.jquery.com/jquery-3.2.1.slim.min.js' integrity='sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN' crossorigin='anonymous')
script(src='https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js' integrity='sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q' crossorigin='anonymous')
script(src='https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js' integrity='sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl' crossorigin='anonymous')
script.
  const modal = document.getElementById('productModalBody');
  const btns = document.getElementsByClassName('btn det px-4');
  let data;
  for (let btn of btns) {
    btn.addEventListener('click', async () => {
      data = await fetch(`http://localhost:3000/service/${btn.getAttribute('data-id')}`)
        .then(async (data) => await data.json())
    modal.innerHTML = `
          <p>Product Name: ${data.name}</p>
          <p>Product IMage: <img src="${ data.image }" class="product-image" /></p>
          <p>Product Price: UGX ${data.price}</p>
          <p>Product Description: ${data.description}</p>
          <p>Product Quantity:  ${data.quantity}</p>
          <p>Product Phone:  ${data.phone}</p>
          `
    });
  }

    const addBtns = document.getElementsByClassName('btn details px-auto');
    
   const Toast = Swal.mixin({
    toast: true,
    position: 'top-end',
    showConfirmButton: false,
    timer: 1500,
    timerProgressBar: true,
    didOpen: (toast) => {
      toast.addEventListener('mouseenter', Swal.stopTimer)
      toast.addEventListener('mouseleave', Swal.resumeTimer)
    }
  })
 
  for (let addBtn of addBtns) {
    const itemId = addBtn.getAttribute('data-id');
    addBtn.addEventListener('click', async () => {
      await fetch(`service/${itemId}`, {
        method: 'POST',
        body: {
          itemId: itemId,
        }
      }).then(async (data) => {
        const notif = document.getElementById('notification');
        const result = await data.json()
          Toast.fire({
        icon: 'success',
        title: 'Added To Cart Successfull'
      })
      }).catch((err) => {
        const notif = document.getElementById('notification');
        notif.innerHTML  = `<p>${err}</p>`;
        notif.style.display = 'block';
      })
    });
  }

